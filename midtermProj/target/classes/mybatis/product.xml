<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "mybatis-3-mapper.dtd">
  
  <mapper namespace="tblproduct">
  		<!-- 동적 쿼리 예시: 상품 조회에 필요한 검색 필터. 아래 4개중 하나의 쿼리로 실행되게 할 수 있음
  							이를 위해 where, if, trim 마이바티스 태그 사용 -->
<!--예시: select * form tbl_product
		where  category='B2' and pname like '%'||'사과'||'%'	=>파라미터가 모두 있을때
				또는 
		select * form tbl_product
		where category='B2'									=>keyword 파라미터가 없을때
				또는
		select * form tbl_product
		where pname like '%'||'사과'||'%'						=>category 파라미터가 없을떄
				또는
		select * form TBL_PRODUCT							=> 파라미터가 모두 없을때(where 안붙음)
			
		  -->  		


<!-- 카테고리 가져오기 -->

<select id="getCategories" resultType="day4.mybatis.dto.CateDto">
	<!-- select distinct category from TBL_PRODUCT order by category -->
	select * from tbl_category order by code
</select>

  		<select id="search" resultType="ProductDto" parameterType="java.util.Map">
  			select * from tbl_product
  			<!--if 중의 하나라도 조건식이 생성됐을때만 where가 붙음  -->
  			<!-- 아래 if의 test 값은 조건식.. keyword 파라미터 값이 null이 아닐때 -->
  			<where>
  				<if test = "category!=null">
  				<!-- 앞의 조건식이 없으면 and는 제거됨(trim)  -->
  					category=#{category}
  				</if>
  				<if test = "keyword!=null">
  				  	<trim prefix="and">	<!-- 해당 위치에 and를 찍겠다 ->앞에 내용이 없으면 (pre) 지우겠다 -->
  					pname like '%'||#{keyword}||'%'
  					</trim>	
  				</if>
  				<!--test의 논리연산: and, or  -->
  				<!-- <if test = "from!=null and to!=null">
  					<trim prefix="and">
  					price between #{from} and #{to}
  					</trim>	
  				</if> -->
  				<if test="from != null and to != null">
	   				<trim prefix="AND" prefixOverrides="AND">
	    	 		 price BETWEEN TRIM(#{from}) AND TRIM(#{to})
	   				</trim>
				</if>
  				
  			</where>
  			<if test="column!=null">
  			ORDER BY ${column}
  			</if>
  		</select>
  		
  
  
	   <select id="selectAll" resultType="ProductDto">
  		SELECT * FROM TBL_PRODUCT ORDER BY pcode
  		</select>
  
  
	   <select id="selectByCategory" parameterType="String" resultType="ProductDto">
	        SELECT * FROM TBL_PRODUCT WHERE CATEGORY = #{category} ORDER BY PNAME
	   </select>
	  
	   <select id="selectByPname" parameterType="String" resultType="ProductDto">
	        SELECT * FROM TBL_PRODUCT WHERE PNAME LIKE '%' || #{pname} || '%' ORDER BY CATEGORY
	   </select>
	   
  		
  		<select id="getPriceTable" resultType="ProductDto">
  			SELECT pcode,price FROM TBL_PRODUCT
  		</select>
  		
  		<select id="getPriceTable2" resultType="java.util.Map">
  			SELECT pname,price FROM TBL_PRODUCT
  		</select>
	   
	  
	  <insert id="insert" parameterType="ProductDto">
	  	INSERT INTO tbl_product VALUES (#{pcode},#{category},#{pname},#{price})
	  </insert>
  
  
  	  <insert id="delete" parameterType="String">
  		DELETE FROM tbl_product WHERE pcode= #{pcode}
  	  </insert>
  </mapper>
  
  
  